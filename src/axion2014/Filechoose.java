/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package axion2014;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.apache.commons.vfs.FileObject;
import org.apache.commons.vfs.FileUtil;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Timer;




/**
 *
 * @author Thusitha
 */
public class Filechoose extends javax.swing.JFrame {
    DBTableToTable d = new DBTableToTable();
    JDBC db = new JDBC();
    
    
    Timer timer = new Timer(1, new ActionListener() {
    @Override
                public void actionPerformed(ActionEvent e) {
                        BufferedImage image;
                        try {
                            //image = ImageIO.read(new File(jFileChooser1.getSelectedFile().getPath()));
                            jLabel2.setIcon(new ImageIcon(new ImageIcon(jFileChooser1.getSelectedFile().getPath()).getImage().getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH)));
                        } catch (Exception ex) {
                        }
            
                }
    });
    
    
    
    
    
    public void insert(String s) throws Exception{
        
        Connection con = db.con();
        con.setAutoCommit(false);
        String INSERT_PICTURE="UPDATE IMAGES SET IMAGE = ? WHERE ID = 0";
         
        FileInputStream fis = null;
        PreparedStatement ps = null;
        try
        {
            con.setAutoCommit(false);
            File file = new File(s);
            fis = new FileInputStream(file);
            ps = con.prepareStatement(INSERT_PICTURE);
            ps.setBinaryStream(2, fis, (int) file.length());
            ps.executeUpdate();
            con.commit();
        }
        finally{   if (ps != null) {
            ps.close();
            }
            if (fis != null) {
            fis.close();
        }
        }
    }
    
    public void insertImage(String img) {
 int len;
 Connection conn;
        try {
            conn = db.con();
 String query;
 PreparedStatement pstmt;
 try {
  File file = new File(img);
  FileInputStream fis = new FileInputStream(file);
  len = (int) file.length();
  query = ("UPDATE IMAGES SET IMAGE = ? WHERE ID = 0");
  pstmt = conn.prepareStatement(query);
  pstmt.setBinaryStream(1, fis, len);
  pstmt.executeUpdate();
        } catch (Exception ex) {
            System.out.println(ex);
        }
 } catch (Exception e) {
            System.out.println(e);
  }
}
    
    public void getImageData() {
        byte[] fileBytes;
        String query;
        Connection conn;
        try {
            conn = db.con();
        
        try {
    query = "SELECT IMAGE FROM IMAGES WHERE ID = 0";
    Statement state = conn.createStatement();
    ResultSet rs = state.executeQuery(query);
    if (rs.next()) {
    fileBytes = rs.getBytes(1);
    OutputStream targetFile = new FileOutputStream("d://camImg.JPG");
    DashBoard.jLabel142.setIcon(new ImageIcon(new ImageIcon("d://camImg.JPG").getImage().getScaledInstance(DashBoard.jLabel142.getWidth(), DashBoard.jLabel142.getHeight(), Image.SCALE_SMOOTH)));
    DashBoard.jLabel151.setIcon(new ImageIcon(new ImageIcon("d://camImg.JPG").getImage().getScaledInstance(DashBoard.jLabel151.getWidth(), DashBoard.jLabel151.getHeight(), Image.SCALE_SMOOTH)));
    targetFile.write(fileBytes);
    targetFile.close();
     }} catch (Exception ex) {
            System.out.println(ex);
        }
    } catch (Exception e) {
            System.out.println(e);
     }
   }

    
    
    
    /**
     * Creates new form Filechoose
     */
    public Filechoose() {
        initComponents();
        setLocation(200, 125);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jFileChooser1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jFileChooser1ComponentAdded(evt);
            }
        });
        jFileChooser1.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jFileChooser1HierarchyChanged(evt);
            }
        });
        jFileChooser1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jFileChooser1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jFileChooser1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jFileChooser1MouseMoved(evt);
            }
        });
        jFileChooser1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFileChooser1FocusGained(evt);
            }
        });
        jFileChooser1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jFileChooser1MouseWheelMoved(evt);
            }
        });
        jFileChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFileChooser1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jFileChooser1MousePressed(evt);
            }
        });
        jFileChooser1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jFileChooser1CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jFileChooser1InputMethodTextChanged(evt);
            }
        });
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        jFileChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFileChooser1PropertyChange(evt);
            }
        });
        jFileChooser1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jFileChooser1VetoableChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        try{
            BufferedImage image;
            //BufferedImage image1;
            image = ImageIO.read(new File(jFileChooser1.getSelectedFile().getPath()));
            //DashBoard.jLabel142.setIcon(new ImageIcon(image));
            try {
                //insert(jFileChooser1.getSelectedFile().getPath());
                insertImage(jFileChooser1.getSelectedFile().getPath());
                getImageData();
                /*
                
                try {
                db.putData("UPDATE IMAGES SET IMAGE = '"+jFileChooser1.getSelectedFile().getPath()+"'");
                System.out.println(jFileChooser1.getSelectedFile().getPath());
                } catch (Exception ex) {
                System.out.println(ex);
                }*/
            } catch (Exception ex) {
                System.out.println(ex);
            }
            
        }catch (IOException e){
            System.out.println(e);
        }
        dispose();
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jFileChooser1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFileChooser1MousePressed
        // TODO add your handling code here:
        
        
        
        
        
    }//GEN-LAST:event_jFileChooser1MousePressed

    private void jFileChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFileChooser1MouseClicked
        // TODO add your handling code here:
        try{
            BufferedImage image;
            image = ImageIO.read(new File(jFileChooser1.getSelectedFile().getPath()));
            try {
                jLabel1.setIcon(new ImageIcon(jFileChooser1.getSelectedFile().getPath()));
            } catch (Exception ex) {
                System.out.println(ex);
            }
            
        }catch (IOException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jFileChooser1MouseClicked

    private void jFileChooser1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jFileChooser1MouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1MouseWheelMoved

    private void jFileChooser1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFileChooser1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1MouseMoved

    private void jFileChooser1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jFileChooser1VetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1VetoableChange

    private void jFileChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFileChooser1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1PropertyChange

    private void jFileChooser1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jFileChooser1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1InputMethodTextChanged

    private void jFileChooser1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFileChooser1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1FocusGained

    private void jFileChooser1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFileChooser1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1AncestorAdded

    private void jFileChooser1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jFileChooser1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ComponentAdded

    private void jFileChooser1HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jFileChooser1HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1HierarchyChanged

    private void jFileChooser1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jFileChooser1CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1CaretPositionChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filechoose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filechoose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filechoose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filechoose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filechoose().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
